library(pacman)
pacman::p_load("rio",
"tidyverse",
"lubridate")
setwd('/home/neopct/Downloads/aula_10')
##importar a base2
base2 <- import("base2.xlsx")
glimpse(base2)
base_exemplo <- base2 %>%
rename(dtsint = DT_SIN_PRI,
dtnasc=DT_NASC) %>%
mutate(idade = trunc(as.numeric(difftime(dtsint, dtnasc, units = "days")) / 365.25))
base_exemplo <- base_exemplo %>%
mutate(faixa_etaria = case_when(idade>=0 & idade<5 ~ "0 a 4 anos",
idade>=5 & idade<10 ~ "5 a 9 anos",
idade>=10 & idade<20 ~ "10 a 19 anos",
idade>=20 & idade<30 ~ "20 a 29 anos",
idade>=30 & idade<40 ~ "30 a 39 anos",
idade>=40 & idade<50 ~ "40 a 49 anos",
idade>=50 & idade<60 ~ "50 a 59 anos",
idade>=60 & idade<=100 ~ "60 a 100 anos",
TRUE ~ "Ignorado"),
faixa_etaria = factor(faixa_etaria, levels = c("0 a 4 anos", "5 a 9 anos","10 a 19 anos",
"20 a 29 anos", "30 a 39 anos", "40 a 49 anos", "50 a 59 anos", "60 a 100 anos","Ignorado")))
base_exemplo <- base_exemplo %>%
mutate(sexo = factor(CS_SEXO,
levels = c("F", "M", "I"),
labels = c("Feminino", "Masculino", "Ignorado")))
base_exemplo <- base_exemplo %>%
mutate(tosse = factor(TOSSE,
levels = c(1, 2, 9),
labels = c("Sim", "Não", "Ignorado")))
ggplot(data = base_exemplo)
ggplot(base_exemplo)
class(base_exemplo$dtsint)
ggplot(data = base_exemplo,
aes(x = dtsint))
ggplot(data = base_exemplo,
aes(x = dtsint)) +
geom_histogram()
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint))
ggplot() +
geom_histogram(data = base_exemplo,
aes(x = dtsint))
# A função estética pode ser declarada dentro da função ggplot
ggplot(data = base_exemplo, aes(x = dtsint)) +
geom_histogram()
# A função estética por ser declarada dentro da geometria
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint))
# Algumas geometrias exigem que os argumentos x e y da estética sejam declarados
base_exemplo2 <- base_exemplo %>%
count(dtsint) %>%
rename(casos = n)
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos))
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
color = "blue"))
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos),
color = "#fdbb84")
# Argumento fill dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
fill = "dtsint"))
# precisamos utilizar outro tipo de geometria
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint,
fill = "red"))
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint),
fill = "red")
# Plotar somente uma variável numérica
ggplot(data = base_exemplo) +
geom_boxplot(aes(y = idade),
color="red")
# Plotar uma variável numérica e outra categórica
ggplot(data = base_exemplo) +
geom_boxplot(aes(x = sexo,
y = idade))
# Adicionar contorno ao gráfico - argumento color ou colour fora da estética
ggplot(data = base_exemplo) +
geom_boxplot(aes(x = sexo,
y = idade),
color = "red")
# Adicionar preenchimento ao gráfico - argumento fill
ggplot(data = base_exemplo) +
geom_boxplot(aes(x = sexo,
y = idade),
fill = "red")
# Adicionar contorno e preenchimento ao gráfico - argumentos color e fill
ggplot(data = base_exemplo) +
geom_boxplot(aes(x = sexo,
y = idade),
color = "violetred1",
fill = "moccasin")
# Para verificar o nome de todas as cores dos argumentos fill e color
colours()
# Adicionar transparência ao gráfico - argumento alpha
ggplot(data = base_exemplo) +
geom_boxplot(aes(x = sexo,
y = idade),
fill = "red",
alpha = 0.2)
# Mudar a orientação do gráfico
ggplot(data = base_exemplo) +
geom_boxplot(aes(x = idade,
y = sexo),
fill = "red")
# Histograma ####
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint))
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint),
stat = "count")
# Adicionar contorno ao gráfico
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint),
stat = "count",
color = "darkred")
# Adicionar preenchimento ao gráfico
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint),
stat = "count",
fill = "darkred")
# Apresentar o histograma por sexo - argumento fill dentro da estética
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint,
fill = sexo),
stat = "count")
# Se declararmos o argumento fill dentro da geometria
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint,
fill = sexo),
fill = "red",
stat = "count")
# Gráfico de linhas ####
ggplot(data = base_exemplo) +
geom_line(aes(x = dtsint),
stat="count")
ggplot(data = base_exemplo) +
geom_line(aes(x = dtsint),
fill = "blue",
stat = "count")
ggplot(data = base_exemplo) +
geom_line(aes(x = dtsint),
color = "blue",
stat="count")
ggplot(data = base_exemplo) +
geom_line(aes(x = dtsint),
stat="count")
ggplot(data = base_exemplo) +
geom_line(aes(x = dtsint,
group = sexo),
stat="count")
ggplot(data = base_exemplo) +
geom_col(aes(x = tosse))
ggplot(data = base_exemplo) +
geom_col(aes(x = tosse))
# Agrupar os dados
base_exemplo3 <- base_exemplo %>%
count(tosse)
# Adicionar o argumento y
ggplot(data = base_exemplo3) +
geom_col(aes(x = tosse, y = n))
ggplot(data = base_exemplo3) +
geom_col(aes(x = tosse, y = n),
fill = "darkgreen")
# Gráfico de densidade ####
ggplot(data = base_exemplo) +
geom_density(aes(x = idade))
# Filtrar idade menor que 105
base_exemplo <- base_exemplo %>%
filter(idade <105)
ggplot(data = base_exemplo) +
geom_density(aes(x = idade))
# Adicionar contorno e preenchimento
ggplot(data = base_exemplo) +
geom_density(aes(x = idade),
color="darkblue",
fill="lightblue")
# Gráfico de densidade ####
ggplot(data = base_exemplo) +
geom_density(aes(x = idade))
# Filtrar idade menor que 105
base_exemplo <- base_exemplo %>%
filter(idade <105)
ggplot(data = base_exemplo) +
geom_density(aes(x = idade))
# Adicionar contorno e preenchimento
ggplot(data = base_exemplo) +
geom_density(aes(x = idade),
color="darkblue",
fill="lightblue")
ggplot(data = base_exemplo) +
geom_density(aes(x = idade,
color= sexo,
fill = sexo),
alpha = 0.5)
ggplot(data = base_exemplo) +
geom_col(aes(x = tosse))
# Agrupar os dados
base_exemplo3 <- base_exemplo %>%
count(tosse)
# Adicionar o argumento y
ggplot(data = base_exemplo3) +
geom_col(aes(x = tosse, y = n))
ggplot(data = base_exemplo3) +
geom_col(aes(x = tosse, y = n),
fill = "darkgreen")
# Gráfico de densidade ####
ggplot(data = base_exemplo) +
geom_density(aes(x = idade))
# Filtrar idade menor que 105
base_exemplo <- base_exemplo %>%
filter(idade <105)
ggplot(data = base_exemplo) +
geom_density(aes(x = idade))
# Adicionar contorno e preenchimento
ggplot(data = base_exemplo) +
geom_density(aes(x = idade),
color="darkblue",
fill="lightblue")
ggplot(data = base_exemplo) +
geom_density(aes(x = idade,
color= sexo,
fill = sexo),
alpha = 0.5)
# Adicionar contorno e preenchimento
ggplot(data = base_exemplo) +
geom_density(aes(x = idade),
color="darkblue",
fill="lightblue")
ggplot(data = base_exemplo) +
geom_density(aes(x = idade,
color= sexo,
fill = sexo),
alpha = 0.5)
# Adicionar contorno e preenchimento
ggplot(data = base_exemplo) +
geom_density(aes(x = idade),
color="darkblue",
fill="lightblue")
ggplot(data = base_exemplo) +
geom_density(aes(x = idade,
color= sexo,
fill = sexo),
alpha = 0.5)
ggplot(data = base_exemplo) +
geom_density(aes(x = idade,
), fill = sexo,
alpha = 0.5)
ggplot(data = base_exemplo) +
geom_density(aes(x = idade,
), fill = 'sexo',
alpha = 0.5)
head(iris)
ggplot(data = iris) +
geom_point(aes(x=Sepal.Length, y=Sepal.Width))
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point(color="orange")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point(color="blue")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) +
geom_point(color="magenta", shape=22)
gplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint),
fill  = "#01665e",
color = "black",
stat = "count") +
labs(title    = "Síndrome respiratória aguda grave",
x = "Data de início dos sintomas",
y = "Nº de hospitalizações",
caption = str_glue("Gráfico elaborado em {today()}"))
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint),
fill  = "#01665e",
color = "black",
stat = "count") +
labs(title    = "Síndrome respiratória aguda grave",
x = "Data de início dos sintomas",
y = "Nº de hospitalizações",
caption = str_glue("Gráfico elaborado em {today()}"))
