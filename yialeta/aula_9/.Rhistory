library(pacman)
pacman::p_load("rio",
"tidyverse",
"lubridate")
path <- getwd()
setwd(path)
##importar a base2
base2 <- import("base2.xlsx")
base_exemplo <- base2 %>%
rename(dtsint = DT_SIN_PRI,
dtnasc=DT_NASC) %>%
mutate(idade = trunc(as.numeric(difftime(dtsint, dtnasc, units = "days")) / 365.25))
base_exemplo <- base_exemplo %>%
mutate(faixa_etaria = case_when(idade>=0 & idade<5 ~ "0 a 4 anos",
idade>=5 & idade<10 ~ "5 a 9 anos",
idade>=10 & idade<20 ~ "10 a 19 anos",
idade>=20 & idade<30 ~ "20 a 29 anos",
idade>=30 & idade<40 ~ "30 a 39 anos",
idade>=40 & idade<50 ~ "40 a 49 anos",
idade>=50 & idade<60 ~ "50 a 59 anos",
idade>=60 & idade<=100 ~ "60 a 100 anos",
TRUE ~ "Ignorado"),
faixa_etaria = factor(faixa_etaria, levels = c("0 a 4 anos", "5 a 9 anos","10 a 19 anos",
"20 a 29 anos", "30 a 39 anos", "40 a 49 anos", "50 a 59 anos", "60 a 100 anos","Ignorado")))
base_exemplo <- base_exemplo %>%
mutate(sexo = factor(CS_SEXO,
levels = c("F", "M", "I"),
labels = c("Feminino", "Masculino", "Ignorado")))
base_exemplo <- base_exemplo %>%
mutate(tosse = factor(TOSSE,
levels = c(1, 2, 9),
labels = c("Sim", "Não", "Ignorado")))
ggplot(data = base_exemplo)
class(base_exemplo$dtsint)
ggplot(data = base_exemplo,
aes(x = dtsint))
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint))
# A base de dados, a estética e geometria podem ser declaradas juntas, fora da função ggplot()
ggplot() +
geom_histogram(data = base_exemplo,
aes(x = dtsint))
# A função estética pode ser declarada dentro da função ggplot
ggplot(data = base_exemplo, aes(x = dtsint)) +
geom_histogram()
# A função estética por ser declarada dentro da geometria
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint))
# Algumas geometrias exigem que os argumentos x e y da estética sejam declarados
base_exemplo2 <- base_exemplo %>%
count(dtsint) %>%
rename(casos = n)
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos))
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
color = "blue"))
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
color = "blue"))
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
color = "blue"))
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
color = "green"))
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
color = 'blue'))
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
color = 2))
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
) + geom_col("red"))
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
) ) + geom_col("red")
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
) color = "green")
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
), color = "green")
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
), color = "lightgreen")
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
), color = "darktgreen")
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
), color = "darkgreen")
# Argumento color ou colour dentro da função estética
ggplot(data = base_exemplo2) +
geom_color(aes(x = dtsint,
y = casos,
))
line
# Argumento fill dentro da função estética
ggplot(data = base_exemplo2) +
geom_line(aes(x = dtsint,
y = casos,
fill = "blue"))
# O argumento fill não serve para gráfico de linhas,
# precisamos utilizar outro tipo de geometria
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint,
fill = "blue"))
# O argumento fill não serve para gráfico de linhas,
# precisamos utilizar outro tipo de geometria
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint,
), fill = 'blue')
library(tidyverse)
path <- getwd()
readxl::read_excel('/home/neopct/Downloads/conteudo_tcc/data (5).xlsx')
data_socio_econ <- readxl::read_excel('/home/neopct/Downloads/conteudo_tcc/data (5).xlsx')
data_sifilis <- read_csv('home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL_TOTAL.csv')
data_sifilis <- read_csv('home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL_TOTAL.csv')
# Adicionar contorno e preenchimento ao gráfico - argumentos color e fill
ggplot(data = base_exemplo) +
geom_boxplot(aes(x = sexo,
y = idade),
color = "blue",
fill = "green")
data_sifilis <- read_csv('home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL_TOTAL.csv')
data_sifilis <- read_csv('home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL_TOTAL_.csv')
data_sifilis <- read_csv('home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL_TOTAL.csv')
data_sifilis <- readxl::read_excel('home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL_TOTAL.csv')
data_sifilis <-read_csv('home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL_TOTAL.csv')
data_sifilis <-read_csv('~/Downloads/conteudo_tcc/SIFILIS_BRASIL_TOTAL.csv')
library(readr)
SIFILIS_BRASIL_TOTAL <- read_csv("~/Downloads/conteudo_tcc/SIFILIS_BRASIL_TOTAL.csv")
data_socio_econ
data_socio_econ <- data_socio_econ %>%
mutate(drop_na(data_socio_econ))
data_socio_econ <- data_socio_econ %>%
drop_na()
data_socio_econ
View(data_socio_econ)
View(data_socio_econ)
data_socio_econ <- readxl::read_excel('/home/neopct/Downloads/conteudo_tcc/data (5).xlsx')
data_socio_econ <- data_socio_econ %>%
drop_na()
data_socio_econ <- readxl::read_excel('/home/neopct/Downloads/conteudo_tcc/data (5).xlsx')
data_socio_econ
glimpse(data_socio_econ)
# Adicionar transparência ao gráfico - argumento alpha
ggplot(data = base_exemplo) +
geom_boxplot(aes(x = sexo,
y = idade),
fill = "red",
alpha = 0.5)
# Mudar a orientação do gráfico
ggplot(data = base_exemplo) +
geom_boxplot(aes(x = idade,
y = sexo),
fill = "red")
# Histograma ####
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint))
# Declarar o argumento stat
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint),
stat = "count")
# Adicionar contorno ao gráfico
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint),
stat = "count",
color = "darkred")
# Adicionar preenchimento ao gráfico
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint),
stat = "count",
fill = "darkred")
# Apresentar o histograma por sexo - argumento fill dentro da estética
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint,
fill = sexo),
stat = "count")
# Se declararmos o argumento fill dentro da geometria
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint,
fill = sexo),
fill = "red",
stat = "count")
# Se declararmos o argumento fill dentro da geometria
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint,
fill = sexo),
fill = "red",
stat = "count")
# Gráfico de linhas ####
ggplot(data = base_exemplo) +
geom_line(aes(x = dtsint),
stat="count")
# Se declararmos o argumento fill dentro da geometria
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint,
fill = sexo),
fill = "red",
stat = "count")
# Apresentar o histograma por sexo - argumento fill dentro da estética
ggplot(data = base_exemplo) +
geom_histogram(aes(x = dtsint,
fill = sexo),
stat = "count")
library(tidyverse)
read_csv('/home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL.csv')
read_csv('/home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL.csv', Encoding('UTF-8'))
data <- read_csv('/home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL.csv', Encoding('UTF-8'))
glimpse(data)
data <- read_csv('/home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL.csv', Encoding('UTF-8'))
glimpse(data)
View(data)
View(data)
data <- read_csv('/home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL.csv', sep = ';', Encoding('UTF-8'))
data <- read_csv('/home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL.csv', sep = ',', Encoding('UTF-8'))
data <- read_csv(
'/home/neopct/Downloads/conteudo_tcc/SIFILIS_BRASIL.csv',
sep = ",",
na.strings = c("NA", "-"),
comment.char = "#",
transpose = FALSE,
rownames_included = TRUE
)
