pacman::p_load(rio,         # Importação e exportação de dados
tidyverse,   # Manipulação e tratamento de dados
lubridate,   # Manipulação de variáveis do tipo data
abjutils)    # Limpeza d
# Mostrar o diretório de trabalho atual
getwd()
# Mostrar o diretório de trabalho atual
path <- getwd()
setwd(path)
base <- import("base.xlsx")
base <- import("base.xlsx")
##Estrutura geral do banco de dados e das variáveis ####
# Para visualizar a base de dados
View(base)
# Nomes da variáveis
names (base)
# Primeiras observações
head(base)
head(base, 10)
# Últimas observações
tail(base)
tail(base,2)
# Estrutura geral (classes das variáveis e primeiras observações)
#   MUITO UTILIZADO!!
glimpse(base)
# Estrutura geral (classes das variáveis e primeiras observações)
# MUITO UTILIZADO!!
glimpse(base)
clss
cls
clear
clrscr
# Estrutura geral (classes das variáveis e primeiras observações)
# MUITO UTILIZADO!!
glimpse(base)
class(base$dtsint)
str(base)
class(names(base))
# Nomes da variáveis
names (base)
variaveis <- names(base)
variaveis <- names(base)
length(variaveis)
for (x in 1:length(variavis)) {
print(class(variaveis[x]))
}
for (x in 1:length(variaveis)) {
print(class(variaveis[x]))
}
for (x in 1:length(variaveis)) {
print(class(variaveis[x]))
x ++
}
x +1
for (x in 1:length(variaveis)) {
print(class(variaveis[x]))
x +1
}
# Resultado do teste
table(base$CS_RACA)
summary(base)
# Selecionar a base de dados por posição
base_exemplo <- base %>%
select(1,2,3,4)
View(base_exemplo)
View(base_exemplo)
View(base_exemplo)
glimpse(base_exemplo)
head(base_exemplo)
# Por nome
base_exemplo <- base %>%
select(CS_SEXO, dtsint)
head(base_exemplo)
# Excluir dataframe usado para exemplo
rm(base_exemplo)
# Pode ser usado para reorganizar as variáveis no dataframe
# Primeiro vamos observar os nomes das variáveis
glimpse(base)
# Seleção das colunas de interesse e reorganização das posições na base base
base_exemplo <- base %>%
select(CS_SEXO, dtsint, CS_RACA)
# Vamos observar como ficaram as colunas na base base
glimpse(base_exemplo)
# Seleção de variáveis com operador "-" e função c()
base_exemplo <- base %>%
select(-CS_RACA)
glimpse(base_exemplo)
# Remover mais de uma variável da base de dados
base_exemplo <- base %>%
select(-dtsint, -CS_SEXO)
glimpse(base_exemplo)
# Primeiro vamos relembrar os nomes das variáveis na base base e sua estrutura
glimpse(base)
# Para renomear uma variável use a função rename()
# Ex.: Vamos transformar datanotificacao para maiúscula em base
base_exemplo <- base %>%
rename(datainiciosintomas = dtsint)
glimpse(base_exemplo)
count(base$CS_SEXO)
base %>%
count(CS_SEXO)
str_detect("Vigilância epidemiológica em emergências de saúde pública",
pattern = "saúde")
# Espaços são caracteres
str_sub("Vigilância epidemiológica em emergências de saúde pública", -28)
str_sub("Epidemiologia", 1, 3)
# Mudar um texto para caixa baixa
base <- base %>%
mutate(sexo=str_to_lower(CS_SEXO))
base <- base %>%
mutate(teste = idade > 18, 'menor_de_idade')
base <- base %>%
mutate(teste = idade > 18)
base <- base %>%
mutate(teste = idade > 18)
View(base)
rm(base$teste)
rm(base$teste)
View(base)
base <- base %>%
select(7)
base <- import("base.xlsx")
base <- base %>%
mutate(teste = idade > 18)
View(base)
View(base)
base_exemplo <- base %>% mutate(dtnasc_ano = year(dtnasc))
base_exemplo
summary(base_exemplo$dtnasc_ano)
class(base_exemplo)
class(base_exemplo$dtnasc_ano)
ano_as_factor <- as.factor(base_exemplo$dtnasc_ano )
base_exemplo$dtnasc_ano <- as.factor(base_exemplo$dtnasc_ano)
summary(base_exemplo$dtnasc_ano)
View(base_exemplo)
View(base_exemplo)
class(base_exemplo$dtnasc_ano)
View(base_exemplo)
View(base_exemplo)
View(base_exemplo)
View(base_exemplo)
View(base)
View(base_exemplo)
base_exemplo %>% sekect(-teste)
base_exemplo %>% select(-teste)
View(base_exemplo)
View(base_exemplo)
base_exemplo <- base_exemplo %>% select(-teste)
